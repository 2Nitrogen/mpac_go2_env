#ifndef MORPHOLOGY_H
#define MORPHOLOGY_H

typedef enum {
  L_ORIGIN = -1,
  L_X = 0,
  L_Y,
  L_Z,
  L_RX,
  L_RY,
  L_BODY,
  L_FL1,
  L_FL2,
  L_FL3,
  L_FR1,
  L_FR2,
  L_FR3,
  L_BL1,
  L_BL2,
  L_BL3,
  L_BR1,
  L_BR2,
  L_BR3,
  NUM_L
} Link;

typedef enum {
  Q_X = 0,
  Q_Y,
  Q_Z,
  Q_RX,
  Q_RY,
  Q_RZ,
  Q_FL1,
  Q_FL2,
  Q_FL3,
  Q_FR1,
  Q_FR2,
  Q_FR3,
  Q_BL1,
  Q_BL2,
  Q_BL3,
  Q_BR1,
  Q_BR2,
  Q_BR3,
  NUM_Q,
  NUM_COM = Q_RZ+1,
} Joint;

typedef enum {
  S_IMU_ACC_X = 0,
  S_IMU_ACC_Y,
  S_IMU_ACC_Z,
  S_IMU_GYRO_RX,
  S_IMU_GYRO_RY,
  S_IMU_GYRO_RZ,
  S_IMU_FUSED_RX,
  S_IMU_FUSED_RY,
  S_IMU_FUSED_RZ,
  S_Q_FL1,
  S_Q_FL2,
  S_Q_FL3,
  S_Q_FR1,
  S_Q_FR2,
  S_Q_FR3,
  S_Q_BL1,
  S_Q_BL2,
  S_Q_BL3,
  S_Q_BR1,
  S_Q_BR2,
  S_Q_BR3,
  S_QD_FL1,
  S_QD_FL2,
  S_QD_FL3,
  S_QD_FR1,
  S_QD_FR2,
  S_QD_FR3,
  S_QD_BL1,
  S_QD_BL2,
  S_QD_BL3,
  S_QD_BR1,
  S_QD_BR2,
  S_QD_BR3,
  S_U_FL1,
  S_U_FL2,
  S_U_FL3,
  S_U_FR1,
  S_U_FR2,
  S_U_FR3,
  S_U_BL1,
  S_U_BL2,
  S_U_BL3,
  S_U_BR1,
  S_U_BR2,
  S_U_BR3,
  F_FRC_FL_EE,
  F_FRC_FR_EE,
  F_FRC_BL_EE,
  F_FRC_BR_EE,
  S_TEMP_FL1,
  S_TEMP_FL2,
  S_TEMP_FL3,
  S_TEMP_FR1,
  S_TEMP_FR2,
  S_TEMP_FR3,
  S_TEMP_BL1,
  S_TEMP_BL2,
  S_TEMP_BL3,
  S_TEMP_BR1,
  S_TEMP_BR2,
  S_TEMP_BR3,
  S_GROUND_TRUTH_X,
  S_GROUND_TRUTH_Y,
  S_GROUND_TRUTH_Z,
  S_GROUND_TRUTH_RX,
  S_GROUND_TRUTH_RY,
  S_GROUND_TRUTH_RZ,
  NUM_S
} Sensors;

typedef enum {
  F_Q_FL1 = 0,
  F_Q_FL2,
  F_Q_FL3,
  F_Q_FR1,
  F_Q_FR2,
  F_Q_FR3,
  F_Q_BL1,
  F_Q_BL2,
  F_Q_BL3,
  F_Q_BR1,
  F_Q_BR2,
  F_Q_BR3,
  F_FL_EE,
  F_FR_EE,
  F_BL_EE,
  F_BR_EE,
  NUM_F
} Frame;

typedef enum {
  C_FL_EE = 0,
  C_FR_EE,
  C_BL_EE,
  C_BR_EE,
  NUM_C,
  NUM_EE = C_BR_EE+1,
} Contact;

typedef enum {
  U_NONE = -1,
  U_FL1 = 0,
  U_FL2,
  U_FL3,
  U_FR1,
  U_FR2,
  U_FR3,
  U_BL1,
  U_BL2,
  U_BL3,
  U_BR1,
  U_BR2,
  U_BR3,
  NUM_U
} Inputs;

#endif //MORPHOLOGY_H
